---
# Copyright The Conforma Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: release-cli
spec:
  description: Tekton pipeline to release Snapshots to a registry.
  params:
  - default: quay.io/enterprise-contract/cli
    description: Location to push the CLI image to
    name: cli-repo
    type: string
  - default: quay.io/enterprise-contract/tekton-task
    description: Location to push the bundle image to
    name: bundle-repo
    type: string
  - description: The namespaced name (namespace/name) of the snapshot
    name: snapshot
    type: string
  - default: pipeline_intention=release
    description: |
      Extra rule data to be merged into the policy specified in params.enterpriseContractPolicy. Use syntax
      "key1=value1,key2=value2..."
    name: enterpriseContractExtraRuleData
    type: string
  tasks:
  - name: clone-repository
    params:
    - name: url
      value: https://github.com/enterprise-contract/ec-cli
    - name: revision
      value: main
    - name: subdirectory
      value: source
    taskRef:
      params:
      # TODO: Can't use Konflux's git-clone Task because that requires a security context not provided
      # to the ServiceAccount running this pipeline (securityContext.runAsUser: 0).
      - name: url
        value: https://github.com/lcarva/build-definitions.git
      - name: revision
        value: no-root-git-clone
      - name: pathInRepo
        value: task/git-clone/0.1/git-clone.yaml
      resolver: git
    workspaces:
    - name: output
      workspace: release-workspace
  - name: expand-snapshot
    params:
    - name: input
      value: $(params.snapshot)
    runAfter:
    - clone-repository
    taskSpec:
      params:
      - name: input
        type: string
      results:
      - name: cli-snapshot-spec
        type: string
      - name: bundle-snapshot-spec
        type: string
      stepTemplate:
        env:
          - name: HOME
            value: /tekton/home
      steps:
      - command:
        - hack/expand-snapshot.sh
        - $(params.input)
        - $(results.cli-snapshot-spec.path)
        - $(results.bundle-snapshot-spec.path)
        image: quay.io/konflux-ci/appstudio-utils:latest
        name: expand
        workingDir: $(workspaces.source.path)/source
      workspaces:
      - name: source
    workspaces:
    - name: source
      workspace: release-workspace
  - name: verify-enterprise-contract-cli
    params:
    - name: IMAGES
      value: $(tasks.expand-snapshot.results.cli-snapshot-spec)
    - name: SSL_CERT_DIR
      value: /var/run/secrets/kubernetes.io/serviceaccount
    - name: POLICY_CONFIGURATION
      value: $(workspaces.data.path)/source/policies/cli/policy.yaml
    - name: IGNORE_REKOR
      value: "true"
    - name: EXTRA_RULE_DATA
      value: $(params.enterpriseContractExtraRuleData)
    taskRef:
      params:
      - name: bundle
        value: quay.io/enterprise-contract/ec-task-bundle:snapshot
      - name: kind
        value: task
      - name: name
        value: verify-enterprise-contract
      resolver: bundles
    workspaces:
    - name: data
      workspace: release-workspace
  # TODO: Consider using matrix?
  - name: verify-enterprise-contract-bundle
    params:
    - name: IMAGES
      value: $(tasks.expand-snapshot.results.bundle-snapshot-spec)
    - name: SSL_CERT_DIR
      value: /var/run/secrets/kubernetes.io/serviceaccount
    - name: POLICY_CONFIGURATION
      value: $(workspaces.data.path)/source/policies/tekton-task/policy.yaml
    - name: IGNORE_REKOR
      value: "true"
    - name: EXTRA_RULE_DATA
      value: $(params.enterpriseContractExtraRuleData)
    taskRef:
      params:
      - name: bundle
        value: quay.io/enterprise-contract/ec-task-bundle:snapshot
      - name: kind
        value: task
      - name: name
        value: verify-enterprise-contract
      resolver: bundles
    workspaces:
    - name: data
      workspace: release-workspace
  - name: push
    params:
    - name: cli-snapshot-spec
      value: $(tasks.expand-snapshot.results.cli-snapshot-spec)
    - name: cli-target-repo
      value: $(params.cli-repo)
    - name: bundle-snapshot-spec
      value: $(tasks.expand-snapshot.results.bundle-snapshot-spec)
    - name: bundle-target-repo
      value: $(params.bundle-repo)
    runAfter:
    - verify-enterprise-contract-cli
    - verify-enterprise-contract-bundle
    taskSpec:
      params:
      - name: cli-snapshot-spec
        type: string
      - name: cli-target-repo
        type: string
      - name: bundle-snapshot-spec
        type: string
      - name: bundle-target-repo
        type: string
      stepTemplate:
        env:
          - name: HOME
            value: /tekton/home
        workingDir: $(workspaces.source.path)/source
      steps:
      - command:
        - hack/copy-snapshot-image.sh
        - $(params.cli-snapshot-spec)
        - $(params.cli-target-repo)
        image: quay.io/konflux-ci/appstudio-utils:latest
        name: copy-cli
      - command:
        - hack/copy-snapshot-image.sh
        - $(params.bundle-snapshot-spec)
        - $(params.bundle-target-repo)
        image: quay.io/konflux-ci/appstudio-utils:latest
        name: copy-bundle
      workspaces:
      - name: source
    workspaces:
    - name: source
      workspace: release-workspace
  workspaces:
  - name: release-workspace
